The ``add_integer test`` module
======================

Import ``add_integer`` from the ``example`` module:
>>> add_integer = __import__('0-add_integer').add_integer
>>> sys = __import__('sys')
>>> add_integer(10)
108
>>> add_integer(10, 200)
210
>>> add_integer(10.8, 21.8)
31
>>> add_integer(1, float('nan'))
Traceback (most recent call last):
...
ValueError: cannot convert float NaN to integer
>>> add_integer(1, float('inf'))
Traceback (most recent call last):
...
OverflowError: cannot convert float infinity to integer
>>> add_integer()
Traceback (most recent call last):
...
TypeError: add_integer() missing 1 required positional argument: 'a'
>>> add_integer(None)
Traceback (most recent call last):
...
TypeError: a must be an integer
>>> add_integer("hello")
Traceback (most recent call last):
...
TypeError: a must be an integer
>>> add_integer(5, "hello")
Traceback (most recent call last):
...
TypeError: b must be an integer
>>> add_integer(5, [])
Traceback (most recent call last):
...
TypeError: b must be an integer
